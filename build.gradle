group 'marbles.ai'
version '0.2.0'
def grpcVersion = '1.1.2'

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

// Root project dependencies
dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile "log4j:log4j:1.2.16"
    compile "com.amazonaws:aws-java-sdk:1.11.158"
}

// Java8 has strict javadoc html rules which breaks the build.
// Revert to Java7's permissive behavior.
if (JavaVersion.current().isJava8Compatible()) {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        // From Google:
        // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier
        // gradle versions
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'
    }
}

protobuf {
    protoc {
        // FIXME: This should be set globally during configuration of deps
        // The version of protoc must match protobuf-java. If you don't depend on
        // protobuf-java directly, you will be transitively depending on the
        // protobuf-java version that grpc depends on.
        artifact = 'com.google.protobuf:protoc:3.2.0'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                // To generate deprecated interfaces and static bindService method,
                // turn the enable_deprecated option to true below:
                option 'enable_deprecated=false'

            }
        }
    }
}

// Inform IntelliJ projects about the generated code.
apply plugin: 'idea'

idea {
    project {
        languageLevel = '1.8'
        vcs = 'Git'
        ipr {
            withXml { provider ->
                def node = provider.node.component.find { it.@name == 'JavadocGenerationManager' };
                // Ensure gradle and idea save javadoc to same location
                node.option.find { it.@name == 'OUTPUT_DIRECTORY' }.@value = '$PROJECT_DIR$/build/docs/javadoc';
                // Java8 has strict javadoc html rules which breaks the build.
                // Revert to Java7's permissive behavior.
                node.option.find { it.@name == 'OTHER_OPTIONS' }.@value = '-Xdoclint:none -quiet';
            }
        }
    }
    module {
        // Not using generatedSourceDirs because of
        // https://discuss.gradle.org/t/support-for-intellij-2016/15294/8
        // sourceDirs += file("${projectDir}/build/generated/source/proto/main/java");
        // sourceDirs += file("${projectDir}/build/generated/source/proto/main/grpc");
        sourceDirs += file("${rootDir}/build/generated/source/proto/main/java");
        sourceDirs += file("${rootDir}/build/generated/source/proto/main/grpc");
        downloadJavadoc = true
        downloadSources = true
    }
}

